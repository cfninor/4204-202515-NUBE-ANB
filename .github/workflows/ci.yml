name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Unit tests + coverage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: anbdb
          POSTGRES_USER: anbuser
          POSTGRES_PASSWORD: anbpass
        ports: [ "5434:5432" ]
        options: >-
          --health-cmd="pg_isready -U anbuser -d anbdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      TEST_DATABASE_URL: postgresql+psycopg2://anbuser:anbpass@localhost:5432/anbdb_test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('anbapi/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r anbapi/requirements.txt
          if [ -f anbapi/requirements-dev.txt ]; then pip install -r anbapi/requirements-dev.txt; fi

      - name: Run tests (pytest)
        run: |
          python -m pytest

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.python.version=3.12
            -Dsonar.python.coverage.reportPaths=coverage.xml

  build:
    name: Docker build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build API image
        run: |
          docker build -f anbapi/Dockerfile -t anbapi:ci .  